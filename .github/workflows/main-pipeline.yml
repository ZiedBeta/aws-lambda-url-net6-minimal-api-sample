name: dotnet6 minimal api lambda sample pipeline

on:
  push:
    branches: [ main ]
    paths-ignore: 
      - "aws/cfn/hosted-zone.yml"
      
  pull_request:
    branches: [ main ]

jobs:
  build-and-publish:
   
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./src/LambdaMinimalApiSample
 
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - name: Publish
      run: dotnet publish -c Release
      
    - name: Zip artifact
      run: |
        zip -jr lambdaminimalapisample-${{ github.sha }}.zip  ./LambdaMinimalApiSample/bin/Release/net6.0/publish/*
  
    - uses: actions/upload-artifact@v3
      with:
        name: lambdaminimalapisample
        path: ./src/LambdaMinimalApiSample/lambdaminimalapisample-${{ github.sha }}.zip
        
  publish-to-s3:
    needs: [build-and-publish]
    
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    - uses: actions/download-artifact@v2
      with:
        name: lambdaminimalapisample
   
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1

    - name: Create or update lambda bucket
      run: |
        aws cloudformation deploy --template-file ./aws/cfn/lambda-bucket.yml --stack-name lambda-bucket --parameter-overrides LambdaBucketName=minimal-api-lambda-sample-bucket
        
    - name: Upload to S3
      run: |
        aws s3 cp lambdaminimalapisample-${{ github.sha }}.zip s3://minimal-api-lambda-sample-bucket

  ensure-certificate:
    needs: [build-and-publish]
    
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
   
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1

    - name: Deploy certificate
      run: |
        aws cloudformation deploy --template-file ./aws/cfn/certificate.yml \
        --region us-east-1 \
        --stack-name minimal-api-certificate \
        --parameter-overrides DomainName=minimal.inflow-it-labs.tk \
        Application=minimal-api-sample \
        HostedZoneId=Z0464138316PGDCQAU55H


  deploy:
    needs: [publish-to-s3, ensure-certificate]
    
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3 
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1

    - name: Get Certificate Arn
      run: |
        aws ssm get-parameter \
          --region us-east-1 \
          --name "minimal-api-sample/certificate-arn" \
          --query "Parameter.Value" \
          --output text

    - name: Deploy lambda
      run: |
        aws cloudformation deploy --template-file ./aws/cfn/minimal-api-lambda.yml --stack-name minimal-api-lambda-sample --parameter-overrides \
            Application=minimal-api-sample \
            Environment=dev \
            LambdaName=lambda \
            LambdaHandler=LambdaMinimalApiSample \
            LambdaBucketName=minimal-api-lambda-sample-bucket \
            LambdaZipFile=lambdaminimalapisample-${{ github.sha }}.zip \
            --capabilities CAPABILITY_IAM
           
